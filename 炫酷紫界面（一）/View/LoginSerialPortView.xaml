<Window x:Class="炫酷紫界面_一_.View.LoginSerialPortView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:炫酷紫界面_一_.View"
        DataContext="{Binding Source={StaticResource Locator}, Path=LoginSerialPortViewModel}"
        mc:Ignorable="d"
        Title="LoginSerialPortView" AllowsTransparency="True" Focusable="False" Background="Transparent" WindowStyle="None" 
        WindowStartupLocation="CenterScreen" Width="280" Height="320" FontFamily="/Fonts/#FontAwesome">
    <Window.Resources>
        <!--下拉框样式-->
        <Style x:Key="LoginSerialPortComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border BorderBrush="#FF401D83" BorderThickness="3" CornerRadius="10" Background="#FF22425D">
                            <Grid>
                                <!--下拉箭头-->
                                <ToggleButton ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="MinHeight" Value="0"/>
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="Auto"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="#00000000"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" DockPanel.Dock="Right" >
                                                                <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </DockPanel>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">

                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <!--项内容-->
                                <ContentPresenter IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Center" />
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False"/>
                                <!--下拉显示面板HorizontalOffset:设置下拉面板的相对位置-->
                                <Popup HorizontalOffset="-3" Width="{TemplateBinding ActualWidth}"
                                       IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False" PopupAnimation="Slide">
                                    <Grid SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                                        <Border BorderThickness="2,2,2,2" BorderBrush="#FF53D7D9" HorizontalAlignment="Stretch" CornerRadius="10">
                                            <Border.Background>
                                                <SolidColorBrush Color="Transparent" />
                                            </Border.Background>
                                        </Border>
                                        <ScrollViewer SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--按钮样式-->
        <Style x:Key="LoginSerialPortButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle RadiusY="24" RadiusX="24">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
                                        <GradientStop Color="#FF9019C2" Offset="0"/>
                                        <GradientStop Color="#FF0360AC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="OnLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginSerialPortGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="LoginSerialPortGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnUnloaded" Completed="Storyboard_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoginSerialPortGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="LoginSerialPortGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="100"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="60" x:Name="LoginSerialPortWindowChrome" GlassFrameThickness="0" CornerRadius="50"/>
    </WindowChrome.WindowChrome>

    <Grid x:Name="LoginSerialPortGrid" RenderTransformOrigin="0.5,0.5">
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.RenderTransform>

        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.Background>
            <LinearGradientBrush EndPoint="0,1" StartPoint="1,1">
                <GradientStop Color="#273272" Offset="0"/>
                <GradientStop Color="#273252" Offset="0.65"/>
                <GradientStop Color="#273252" Offset="0.6"/>
                <GradientStop Color="#4F4279" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Height="{Binding ElementName=LoginSerialPortWindowChrome,Path=CaptionHeight}">
            <TextBlock Text="串口登录" Foreground="LightBlue" FontSize="30" Margin="18 0 45 0" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Text="&#xf126;" Foreground="{Binding ImageText}" FontSize="50" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <TextBlock Text="串口号" Foreground="#FF54D0FF" FontSize="25" Margin="10 0 22 0" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <ComboBox Style="{StaticResource LoginSerialPortComboBox}" FontSize="18" Height="35" Width="150" Foreground="#FF05E0AD"
                      SelectedItem="{Binding SerialPortNumberCombboxItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                      ItemsSource="{Binding SerialPortNumberCombboxList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      DisplayMemberPath="SerialPortNumberText" SelectedValuePath="SerialPortNumberKey">
            </ComboBox>
        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <TextBlock Text="波特率" Foreground="#FF54D0FF" FontSize="25" Margin="10 0 22 0" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <ComboBox Style="{StaticResource LoginSerialPortComboBox}" FontSize="18" Height="35" Width="150" Foreground="#FF05E0AD"
                      SelectedItem="{Binding SerialPortBaudRateCombboxItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      ItemsSource="{Binding SerialPortBaudRateCombboxList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      DisplayMemberPath="SerialPortBaudRateText" SelectedValuePath="SerialPortBaudRateKey">
            </ComboBox>
        </StackPanel>

        <StackPanel Grid.Row="3" Orientation="Horizontal">
            <TextBlock Text="停止位" Foreground="#FF93DDF0" FontSize="20" Margin="30 0 20 0" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Text="数据位" Foreground="#FF93DDF0" FontSize="20" Margin="15 0 5 0" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <TextBlock Text="校验位" Foreground="#FF93DDF0" FontSize="20" Margin="15 0 0 0" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
        </StackPanel>

        <StackPanel Grid.Row="4" Orientation="Horizontal">
            <ComboBox Style="{StaticResource LoginSerialPortComboBox}" FontSize="18" Height="35" Width="115" Foreground="#FF05E0AD" Margin="2,0,0,0"
                      SelectedItem="{Binding SerialPortStopBitCombboxItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      ItemsSource="{Binding SerialPortStopBitCombboxList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      DisplayMemberPath="SerialPortStopBitText" SelectedValuePath="SerialPortStopBitKey">
            </ComboBox>
            <ComboBox Style="{StaticResource LoginSerialPortComboBox}" FontSize="18" Height="35" Width="80" Foreground="#FF05E0AD"
                      SelectedItem="{Binding SerialPortDataBitCombboxItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      ItemsSource="{Binding SerialPortDataBitCombboxList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      DisplayMemberPath="SerialPortDataBitText" SelectedValuePath="SerialPortDataBitKey">
            </ComboBox>
            <ComboBox Style="{StaticResource LoginSerialPortComboBox}" FontSize="18" Height="35" Width="80" Foreground="#FF05E0AD"
                      SelectedItem="{Binding SerialPortCheckBitCombboxItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      ItemsSource="{Binding SerialPortCheckBitCombboxList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      DisplayMemberPath="SerialPortCheckBitText" SelectedValuePath="SerialPortCheckBitKey">
            </ComboBox>
        </StackPanel>

        <StackPanel Grid.Row="5" Orientation="Horizontal">
            <Button Content="{Binding ConnectButtonText}" Command="{Binding ConnectCmd}" Style="{DynamicResource LoginSerialPortButtonStyle}" FontSize="25" FontWeight="Bold" HorizontalAlignment="Center" Height="50" VerticalAlignment="Center" Width="120" Margin="10 0 10 0" Foreground="#FFE2FFD5" Cursor="Hand"/>
            <Button Content="退出" Style="{DynamicResource LoginSerialPortButtonStyle}" Click="Button_Click" FontSize="25" FontWeight="Bold" HorizontalAlignment="Center" Height="50" VerticalAlignment="Center" Width="120" Margin="10 0 10 0" Foreground="#FFE2FFD5" Cursor="Hand"/>
        </StackPanel>

    </Grid>
</Window>
